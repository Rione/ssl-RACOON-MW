// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.3
// source: proto/pb_src/to_racoonai.proto

package pb_gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Robot_Infos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId           *uint32  `protobuf:"varint,1,req,name=robot_id,json=robotId" json:"robot_id,omitempty"`
	X                 *float32 `protobuf:"fixed32,2,req,name=x" json:"x,omitempty"`
	Y                 *float32 `protobuf:"fixed32,3,req,name=y" json:"y,omitempty"`
	Theta             *float32 `protobuf:"fixed32,4,req,name=theta" json:"theta,omitempty"`
	DistanceBallRobot *float32 `protobuf:"fixed32,5,req,name=distance_ball_robot,json=distanceBallRobot" json:"distance_ball_robot,omitempty"`
	DegreeBallRobot   *float32 `protobuf:"fixed32,6,req,name=degree_ball_robot,json=degreeBallRobot" json:"degree_ball_robot,omitempty"`
	Speed             *float32 `protobuf:"fixed32,7,req,name=speed" json:"speed,omitempty"`
	Slope             *float32 `protobuf:"fixed32,8,req,name=slope" json:"slope,omitempty"`
	Intercept         *float32 `protobuf:"fixed32,9,req,name=intercept" json:"intercept,omitempty"`
	AngularVelocity   *float32 `protobuf:"fixed32,10,req,name=angular_velocity,json=angularVelocity" json:"angular_velocity,omitempty"`
	BallCatch         *bool    `protobuf:"varint,11,req,name=ball_catch,json=ballCatch" json:"ball_catch,omitempty"`
	Online            *bool    `protobuf:"varint,12,req,name=online" json:"online,omitempty"`
	BatteryVoltage    *float32 `protobuf:"fixed32,13,opt,name=battery_voltage,json=batteryVoltage" json:"battery_voltage,omitempty"`
}

func (x *Robot_Infos) Reset() {
	*x = Robot_Infos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robot_Infos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot_Infos) ProtoMessage() {}

func (x *Robot_Infos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot_Infos.ProtoReflect.Descriptor instead.
func (*Robot_Infos) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{0}
}

func (x *Robot_Infos) GetRobotId() uint32 {
	if x != nil && x.RobotId != nil {
		return *x.RobotId
	}
	return 0
}

func (x *Robot_Infos) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Robot_Infos) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Robot_Infos) GetTheta() float32 {
	if x != nil && x.Theta != nil {
		return *x.Theta
	}
	return 0
}

func (x *Robot_Infos) GetDistanceBallRobot() float32 {
	if x != nil && x.DistanceBallRobot != nil {
		return *x.DistanceBallRobot
	}
	return 0
}

func (x *Robot_Infos) GetDegreeBallRobot() float32 {
	if x != nil && x.DegreeBallRobot != nil {
		return *x.DegreeBallRobot
	}
	return 0
}

func (x *Robot_Infos) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *Robot_Infos) GetSlope() float32 {
	if x != nil && x.Slope != nil {
		return *x.Slope
	}
	return 0
}

func (x *Robot_Infos) GetIntercept() float32 {
	if x != nil && x.Intercept != nil {
		return *x.Intercept
	}
	return 0
}

func (x *Robot_Infos) GetAngularVelocity() float32 {
	if x != nil && x.AngularVelocity != nil {
		return *x.AngularVelocity
	}
	return 0
}

func (x *Robot_Infos) GetBallCatch() bool {
	if x != nil && x.BallCatch != nil {
		return *x.BallCatch
	}
	return false
}

func (x *Robot_Infos) GetOnline() bool {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return false
}

func (x *Robot_Infos) GetBatteryVoltage() float32 {
	if x != nil && x.BatteryVoltage != nil {
		return *x.BatteryVoltage
	}
	return 0
}

type Enemy_Infos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId         *uint32  `protobuf:"varint,1,req,name=robot_id,json=robotId" json:"robot_id,omitempty"`
	X               *float32 `protobuf:"fixed32,2,req,name=x" json:"x,omitempty"`
	Y               *float32 `protobuf:"fixed32,3,req,name=y" json:"y,omitempty"`
	Theta           *float32 `protobuf:"fixed32,4,req,name=theta" json:"theta,omitempty"`
	Speed           *float32 `protobuf:"fixed32,6,req,name=speed" json:"speed,omitempty"`
	Slope           *float32 `protobuf:"fixed32,7,req,name=slope" json:"slope,omitempty"`
	Intercept       *float32 `protobuf:"fixed32,8,req,name=intercept" json:"intercept,omitempty"`
	AngularVelocity *float32 `protobuf:"fixed32,9,req,name=angular_velocity,json=angularVelocity" json:"angular_velocity,omitempty"`
}

func (x *Enemy_Infos) Reset() {
	*x = Enemy_Infos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enemy_Infos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enemy_Infos) ProtoMessage() {}

func (x *Enemy_Infos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enemy_Infos.ProtoReflect.Descriptor instead.
func (*Enemy_Infos) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{1}
}

func (x *Enemy_Infos) GetRobotId() uint32 {
	if x != nil && x.RobotId != nil {
		return *x.RobotId
	}
	return 0
}

func (x *Enemy_Infos) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Enemy_Infos) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Enemy_Infos) GetTheta() float32 {
	if x != nil && x.Theta != nil {
		return *x.Theta
	}
	return 0
}

func (x *Enemy_Infos) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *Enemy_Infos) GetSlope() float32 {
	if x != nil && x.Slope != nil {
		return *x.Slope
	}
	return 0
}

func (x *Enemy_Infos) GetIntercept() float32 {
	if x != nil && x.Intercept != nil {
		return *x.Intercept
	}
	return 0
}

func (x *Enemy_Infos) GetAngularVelocity() float32 {
	if x != nil && x.AngularVelocity != nil {
		return *x.AngularVelocity
	}
	return 0
}

type Ball_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilteredX   *float32 `protobuf:"fixed32,1,req,name=filtered_x,json=filteredX" json:"filtered_x,omitempty"`
	FilteredY   *float32 `protobuf:"fixed32,2,req,name=filtered_y,json=filteredY" json:"filtered_y,omitempty"`
	X           *float32 `protobuf:"fixed32,3,req,name=x" json:"x,omitempty"`
	Y           *float32 `protobuf:"fixed32,4,req,name=y" json:"y,omitempty"`
	SlopeDegree *float32 `protobuf:"fixed32,5,req,name=slope_degree,json=slopeDegree" json:"slope_degree,omitempty"`
	Intercept   *float32 `protobuf:"fixed32,6,req,name=intercept" json:"intercept,omitempty"`
	Speed       *float32 `protobuf:"fixed32,7,req,name=speed" json:"speed,omitempty"`
	Slope       *float32 `protobuf:"fixed32,8,req,name=slope" json:"slope,omitempty"`
}

func (x *Ball_Info) Reset() {
	*x = Ball_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ball_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ball_Info) ProtoMessage() {}

func (x *Ball_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ball_Info.ProtoReflect.Descriptor instead.
func (*Ball_Info) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{2}
}

func (x *Ball_Info) GetFilteredX() float32 {
	if x != nil && x.FilteredX != nil {
		return *x.FilteredX
	}
	return 0
}

func (x *Ball_Info) GetFilteredY() float32 {
	if x != nil && x.FilteredY != nil {
		return *x.FilteredY
	}
	return 0
}

func (x *Ball_Info) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Ball_Info) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Ball_Info) GetSlopeDegree() float32 {
	if x != nil && x.SlopeDegree != nil {
		return *x.SlopeDegree
	}
	return 0
}

func (x *Ball_Info) GetIntercept() float32 {
	if x != nil && x.Intercept != nil {
		return *x.Intercept
	}
	return 0
}

func (x *Ball_Info) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *Ball_Info) GetSlope() float32 {
	if x != nil && x.Slope != nil {
		return *x.Slope
	}
	return 0
}

type Goal_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
}

func (x *Goal_Info) Reset() {
	*x = Goal_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal_Info) ProtoMessage() {}

func (x *Goal_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal_Info.ProtoReflect.Descriptor instead.
func (*Goal_Info) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{3}
}

func (x *Goal_Info) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Goal_Info) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type Referee_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command        *uint32  `protobuf:"varint,1,req,name=command" json:"command,omitempty"`
	YellowCards    *uint32  `protobuf:"varint,2,req,name=yellow_cards,json=yellowCards" json:"yellow_cards,omitempty"`
	RedCards       *uint32  `protobuf:"varint,3,req,name=red_cards,json=redCards" json:"red_cards,omitempty"`
	BallPlacementX *float32 `protobuf:"fixed32,4,opt,name=ball_placement_x,json=ballPlacementX" json:"ball_placement_x,omitempty"`
	BallPlacementY *float32 `protobuf:"fixed32,5,opt,name=ball_placement_y,json=ballPlacementY" json:"ball_placement_y,omitempty"`
}

func (x *Referee_Info) Reset() {
	*x = Referee_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Referee_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Referee_Info) ProtoMessage() {}

func (x *Referee_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Referee_Info.ProtoReflect.Descriptor instead.
func (*Referee_Info) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{4}
}

func (x *Referee_Info) GetCommand() uint32 {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return 0
}

func (x *Referee_Info) GetYellowCards() uint32 {
	if x != nil && x.YellowCards != nil {
		return *x.YellowCards
	}
	return 0
}

func (x *Referee_Info) GetRedCards() uint32 {
	if x != nil && x.RedCards != nil {
		return *x.RedCards
	}
	return 0
}

func (x *Referee_Info) GetBallPlacementX() float32 {
	if x != nil && x.BallPlacementX != nil {
		return *x.BallPlacementX
	}
	return 0
}

func (x *Referee_Info) GetBallPlacementY() float32 {
	if x != nil && x.BallPlacementY != nil {
		return *x.BallPlacementY
	}
	return 0
}

type Other_Infos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumOfCameras    *int32   `protobuf:"varint,1,req,name=num_of_cameras,json=numOfCameras" json:"num_of_cameras,omitempty"`
	Secperframe     *float32 `protobuf:"fixed32,2,req,name=secperframe" json:"secperframe,omitempty"`
	IsVisionRecv    *bool    `protobuf:"varint,3,req,name=is_vision_recv,json=isVisionRecv" json:"is_vision_recv,omitempty"`
	AttackDirection *int32   `protobuf:"varint,4,req,name=attack_direction,json=attackDirection" json:"attack_direction,omitempty"`
}

func (x *Other_Infos) Reset() {
	*x = Other_Infos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Other_Infos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Other_Infos) ProtoMessage() {}

func (x *Other_Infos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Other_Infos.ProtoReflect.Descriptor instead.
func (*Other_Infos) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{5}
}

func (x *Other_Infos) GetNumOfCameras() int32 {
	if x != nil && x.NumOfCameras != nil {
		return *x.NumOfCameras
	}
	return 0
}

func (x *Other_Infos) GetSecperframe() float32 {
	if x != nil && x.Secperframe != nil {
		return *x.Secperframe
	}
	return 0
}

func (x *Other_Infos) GetIsVisionRecv() bool {
	if x != nil && x.IsVisionRecv != nil {
		return *x.IsVisionRecv
	}
	return false
}

func (x *Other_Infos) GetAttackDirection() int32 {
	if x != nil && x.AttackDirection != nil {
		return *x.AttackDirection
	}
	return 0
}

type RacoonMW_Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OurRobots   []*Robot_Infos `protobuf:"bytes,1,rep,name=our_robots,json=ourRobots" json:"our_robots,omitempty"`
	EnemyRobots []*Enemy_Infos `protobuf:"bytes,2,rep,name=enemy_robots,json=enemyRobots" json:"enemy_robots,omitempty"`
	Goal        *Goal_Info     `protobuf:"bytes,3,req,name=goal" json:"goal,omitempty"`
	Ball        *Ball_Info     `protobuf:"bytes,4,req,name=ball" json:"ball,omitempty"`
	Referee     *Referee_Info  `protobuf:"bytes,5,req,name=referee" json:"referee,omitempty"`
	Info        *Other_Infos   `protobuf:"bytes,6,req,name=info" json:"info,omitempty"`
}

func (x *RacoonMW_Packet) Reset() {
	*x = RacoonMW_Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RacoonMW_Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RacoonMW_Packet) ProtoMessage() {}

func (x *RacoonMW_Packet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_src_to_racoonai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RacoonMW_Packet.ProtoReflect.Descriptor instead.
func (*RacoonMW_Packet) Descriptor() ([]byte, []int) {
	return file_proto_pb_src_to_racoonai_proto_rawDescGZIP(), []int{6}
}

func (x *RacoonMW_Packet) GetOurRobots() []*Robot_Infos {
	if x != nil {
		return x.OurRobots
	}
	return nil
}

func (x *RacoonMW_Packet) GetEnemyRobots() []*Enemy_Infos {
	if x != nil {
		return x.EnemyRobots
	}
	return nil
}

func (x *RacoonMW_Packet) GetGoal() *Goal_Info {
	if x != nil {
		return x.Goal
	}
	return nil
}

func (x *RacoonMW_Packet) GetBall() *Ball_Info {
	if x != nil {
		return x.Ball
	}
	return nil
}

func (x *RacoonMW_Packet) GetReferee() *Referee_Info {
	if x != nil {
		return x.Referee
	}
	return nil
}

func (x *RacoonMW_Packet) GetInfo() *Other_Infos {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_proto_pb_src_to_racoonai_proto protoreflect.FileDescriptor

var file_proto_pb_src_to_racoonai_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x5f, 0x73, 0x72, 0x63, 0x2f, 0x74,
	0x6f, 0x5f, 0x72, 0x61, 0x63, 0x6f, 0x6f, 0x6e, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8b, 0x03, 0x0a, 0x0b, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x02, 0x52, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61, 0x12, 0x2e, 0x0a,
	0x13, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x02, 0x52, 0x11, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x42, 0x61, 0x6c, 0x6c, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x02, 0x52, 0x05,
	0x73, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65,
	0x70, 0x74, 0x18, 0x09, 0x20, 0x02, 0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x63,
	0x65, 0x70, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0f, 0x61,
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0b, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x5f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x22, 0xcf,
	0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x02, 0x52, 0x05, 0x74, 0x68, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x65, 0x70, 0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x63, 0x65, 0x70, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72,
	0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x02, 0x28, 0x02, 0x52,
	0x0f, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x22, 0xd2, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x6c, 0x6c, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x02, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x58, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x02, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x59, 0x12, 0x0c, 0x0a, 0x01,
	0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6c, 0x6f, 0x70,
	0x65, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0b,
	0x73, 0x6c, 0x6f, 0x70, 0x65, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x02, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x02, 0x52, 0x05,
	0x73, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x09, 0x47, 0x6f, 0x61, 0x6c, 0x5f, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0xbc,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x65, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x79, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x0b, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0e, 0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x58, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x62,
	0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x59, 0x22, 0xa6, 0x01,
	0x0a, 0x0b, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x70, 0x65, 0x72, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x70, 0x65, 0x72,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x56, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x76, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfa, 0x01, 0x0a, 0x0f, 0x52, 0x61, 0x63, 0x6f, 0x6f,
	0x6e, 0x4d, 0x57, 0x5f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x6f, 0x75,
	0x72, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x09, 0x6f, 0x75,
	0x72, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x0c, 0x65, 0x6e, 0x65, 0x6d, 0x79,
	0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x45, 0x6e, 0x65, 0x6d, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x0b, 0x65, 0x6e, 0x65,
	0x6d, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x5f, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x5f, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x6c, 0x6c, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x65, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x65, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x52, 0x69, 0x6f, 0x6e, 0x65, 0x2d, 0x53, 0x53, 0x4c, 0x2f, 0x52, 0x41, 0x43, 0x4f,
	0x4f, 0x4e, 0x2d, 0x50, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x5f, 0x67,
	0x65, 0x6e,
}

var (
	file_proto_pb_src_to_racoonai_proto_rawDescOnce sync.Once
	file_proto_pb_src_to_racoonai_proto_rawDescData = file_proto_pb_src_to_racoonai_proto_rawDesc
)

func file_proto_pb_src_to_racoonai_proto_rawDescGZIP() []byte {
	file_proto_pb_src_to_racoonai_proto_rawDescOnce.Do(func() {
		file_proto_pb_src_to_racoonai_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pb_src_to_racoonai_proto_rawDescData)
	})
	return file_proto_pb_src_to_racoonai_proto_rawDescData
}

var file_proto_pb_src_to_racoonai_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_pb_src_to_racoonai_proto_goTypes = []interface{}{
	(*Robot_Infos)(nil),     // 0: Robot_Infos
	(*Enemy_Infos)(nil),     // 1: Enemy_Infos
	(*Ball_Info)(nil),       // 2: Ball_Info
	(*Goal_Info)(nil),       // 3: Goal_Info
	(*Referee_Info)(nil),    // 4: Referee_Info
	(*Other_Infos)(nil),     // 5: Other_Infos
	(*RacoonMW_Packet)(nil), // 6: RacoonMW_Packet
}
var file_proto_pb_src_to_racoonai_proto_depIdxs = []int32{
	0, // 0: RacoonMW_Packet.our_robots:type_name -> Robot_Infos
	1, // 1: RacoonMW_Packet.enemy_robots:type_name -> Enemy_Infos
	3, // 2: RacoonMW_Packet.goal:type_name -> Goal_Info
	2, // 3: RacoonMW_Packet.ball:type_name -> Ball_Info
	4, // 4: RacoonMW_Packet.referee:type_name -> Referee_Info
	5, // 5: RacoonMW_Packet.info:type_name -> Other_Infos
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_pb_src_to_racoonai_proto_init() }
func file_proto_pb_src_to_racoonai_proto_init() {
	if File_proto_pb_src_to_racoonai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_pb_src_to_racoonai_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robot_Infos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_src_to_racoonai_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enemy_Infos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_src_to_racoonai_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ball_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_src_to_racoonai_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_src_to_racoonai_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Referee_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_src_to_racoonai_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Other_Infos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_src_to_racoonai_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RacoonMW_Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pb_src_to_racoonai_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pb_src_to_racoonai_proto_goTypes,
		DependencyIndexes: file_proto_pb_src_to_racoonai_proto_depIdxs,
		MessageInfos:      file_proto_pb_src_to_racoonai_proto_msgTypes,
	}.Build()
	File_proto_pb_src_to_racoonai_proto = out.File
	file_proto_pb_src_to_racoonai_proto_rawDesc = nil
	file_proto_pb_src_to_racoonai_proto_goTypes = nil
	file_proto_pb_src_to_racoonai_proto_depIdxs = nil
}
