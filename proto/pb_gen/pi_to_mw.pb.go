// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.1
// source: pi_to_mw.proto

package pb_gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PiToMw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RobotsStatus  *Robot_Status          `protobuf:"bytes,1,req,name=robots_status,json=robotsStatus" json:"robots_status,omitempty"`
	BallStatus    *Ball_Status           `protobuf:"bytes,2,req,name=ball_status,json=ballStatus" json:"ball_status,omitempty"`
	Ball          *Ball                  `protobuf:"bytes,3,req,name=ball" json:"ball,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PiToMw) Reset() {
	*x = PiToMw{}
	mi := &file_pi_to_mw_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PiToMw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PiToMw) ProtoMessage() {}

func (x *PiToMw) ProtoReflect() protoreflect.Message {
	mi := &file_pi_to_mw_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PiToMw.ProtoReflect.Descriptor instead.
func (*PiToMw) Descriptor() ([]byte, []int) {
	return file_pi_to_mw_proto_rawDescGZIP(), []int{0}
}

func (x *PiToMw) GetRobotsStatus() *Robot_Status {
	if x != nil {
		return x.RobotsStatus
	}
	return nil
}

func (x *PiToMw) GetBallStatus() *Ball_Status {
	if x != nil {
		return x.BallStatus
	}
	return nil
}

func (x *PiToMw) GetBall() *Ball {
	if x != nil {
		return x.Ball
	}
	return nil
}

type Robot_Status struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	RobotId                *uint32                `protobuf:"varint,1,req,name=robot_id,json=robotId" json:"robot_id,omitempty"`
	IsDetectPhotoSensor    *bool                  `protobuf:"varint,2,req,name=is_detect_photo_sensor,json=isDetectPhotoSensor" json:"is_detect_photo_sensor,omitempty"`
	IsDetectDribblerSensor *bool                  `protobuf:"varint,3,req,name=is_detect_dribbler_sensor,json=isDetectDribblerSensor" json:"is_detect_dribbler_sensor,omitempty"`
	IsNewDribbler          *bool                  `protobuf:"varint,4,req,name=is_new_dribbler,json=isNewDribbler" json:"is_new_dribbler,omitempty"`
	BatteryVoltage         *uint32                `protobuf:"varint,5,req,name=battery_voltage,json=batteryVoltage" json:"battery_voltage,omitempty"`
	CapPower               *uint32                `protobuf:"varint,6,req,name=cap_power,json=capPower" json:"cap_power,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Robot_Status) Reset() {
	*x = Robot_Status{}
	mi := &file_pi_to_mw_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Robot_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot_Status) ProtoMessage() {}

func (x *Robot_Status) ProtoReflect() protoreflect.Message {
	mi := &file_pi_to_mw_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot_Status.ProtoReflect.Descriptor instead.
func (*Robot_Status) Descriptor() ([]byte, []int) {
	return file_pi_to_mw_proto_rawDescGZIP(), []int{1}
}

func (x *Robot_Status) GetRobotId() uint32 {
	if x != nil && x.RobotId != nil {
		return *x.RobotId
	}
	return 0
}

func (x *Robot_Status) GetIsDetectPhotoSensor() bool {
	if x != nil && x.IsDetectPhotoSensor != nil {
		return *x.IsDetectPhotoSensor
	}
	return false
}

func (x *Robot_Status) GetIsDetectDribblerSensor() bool {
	if x != nil && x.IsDetectDribblerSensor != nil {
		return *x.IsDetectDribblerSensor
	}
	return false
}

func (x *Robot_Status) GetIsNewDribbler() bool {
	if x != nil && x.IsNewDribbler != nil {
		return *x.IsNewDribbler
	}
	return false
}

func (x *Robot_Status) GetBatteryVoltage() uint32 {
	if x != nil && x.BatteryVoltage != nil {
		return *x.BatteryVoltage
	}
	return 0
}

func (x *Robot_Status) GetCapPower() uint32 {
	if x != nil && x.CapPower != nil {
		return *x.CapPower
	}
	return 0
}

type Ball_Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsBallExit    *bool                  `protobuf:"varint,1,req,name=is_ball_exit,json=isBallExit" json:"is_ball_exit,omitempty"`
	BallCameraX   *float32               `protobuf:"fixed32,2,req,name=ball_camera_x,json=ballCameraX" json:"ball_camera_x,omitempty"`
	BallCameraY   *float32               `protobuf:"fixed32,3,req,name=ball_camera_y,json=ballCameraY" json:"ball_camera_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ball_Status) Reset() {
	*x = Ball_Status{}
	mi := &file_pi_to_mw_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ball_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ball_Status) ProtoMessage() {}

func (x *Ball_Status) ProtoReflect() protoreflect.Message {
	mi := &file_pi_to_mw_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ball_Status.ProtoReflect.Descriptor instead.
func (*Ball_Status) Descriptor() ([]byte, []int) {
	return file_pi_to_mw_proto_rawDescGZIP(), []int{2}
}

func (x *Ball_Status) GetIsBallExit() bool {
	if x != nil && x.IsBallExit != nil {
		return *x.IsBallExit
	}
	return false
}

func (x *Ball_Status) GetBallCameraX() float32 {
	if x != nil && x.BallCameraX != nil {
		return *x.BallCameraX
	}
	return 0
}

func (x *Ball_Status) GetBallCameraY() float32 {
	if x != nil && x.BallCameraY != nil {
		return *x.BallCameraY
	}
	return 0
}

type Ball struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MinThreshold         *string                `protobuf:"bytes,1,req,name=min_threshold,json=minThreshold" json:"min_threshold,omitempty"`
	MaxThreshold         *string                `protobuf:"bytes,2,req,name=max_threshold,json=maxThreshold" json:"max_threshold,omitempty"`
	BallDetectRadius     *int32                 `protobuf:"varint,3,req,name=ball_detect_radius,json=ballDetectRadius" json:"ball_detect_radius,omitempty"`
	CircularityThreshold *float32               `protobuf:"fixed32,4,req,name=circularity_threshold,json=circularityThreshold" json:"circularity_threshold,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Ball) Reset() {
	*x = Ball{}
	mi := &file_pi_to_mw_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ball) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ball) ProtoMessage() {}

func (x *Ball) ProtoReflect() protoreflect.Message {
	mi := &file_pi_to_mw_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ball.ProtoReflect.Descriptor instead.
func (*Ball) Descriptor() ([]byte, []int) {
	return file_pi_to_mw_proto_rawDescGZIP(), []int{3}
}

func (x *Ball) GetMinThreshold() string {
	if x != nil && x.MinThreshold != nil {
		return *x.MinThreshold
	}
	return ""
}

func (x *Ball) GetMaxThreshold() string {
	if x != nil && x.MaxThreshold != nil {
		return *x.MaxThreshold
	}
	return ""
}

func (x *Ball) GetBallDetectRadius() int32 {
	if x != nil && x.BallDetectRadius != nil {
		return *x.BallDetectRadius
	}
	return 0
}

func (x *Ball) GetCircularityThreshold() float32 {
	if x != nil && x.CircularityThreshold != nil {
		return *x.CircularityThreshold
	}
	return 0
}

var File_pi_to_mw_proto protoreflect.FileDescriptor

const file_pi_to_mw_proto_rawDesc = "" +
	"\n" +
	"\x0epi_to_mw.proto\"\x86\x01\n" +
	"\x06PiToMw\x122\n" +
	"\rrobots_status\x18\x01 \x02(\v2\r.Robot_StatusR\frobotsStatus\x12-\n" +
	"\vball_status\x18\x02 \x02(\v2\f.Ball_StatusR\n" +
	"ballStatus\x12\x19\n" +
	"\x04ball\x18\x03 \x02(\v2\x05.BallR\x04ball\"\x87\x02\n" +
	"\fRobot_Status\x12\x19\n" +
	"\brobot_id\x18\x01 \x02(\rR\arobotId\x123\n" +
	"\x16is_detect_photo_sensor\x18\x02 \x02(\bR\x13isDetectPhotoSensor\x129\n" +
	"\x19is_detect_dribbler_sensor\x18\x03 \x02(\bR\x16isDetectDribblerSensor\x12&\n" +
	"\x0fis_new_dribbler\x18\x04 \x02(\bR\risNewDribbler\x12'\n" +
	"\x0fbattery_voltage\x18\x05 \x02(\rR\x0ebatteryVoltage\x12\x1b\n" +
	"\tcap_power\x18\x06 \x02(\rR\bcapPower\"w\n" +
	"\vBall_Status\x12 \n" +
	"\fis_ball_exit\x18\x01 \x02(\bR\n" +
	"isBallExit\x12\"\n" +
	"\rball_camera_x\x18\x02 \x02(\x02R\vballCameraX\x12\"\n" +
	"\rball_camera_y\x18\x03 \x02(\x02R\vballCameraY\"\xb3\x01\n" +
	"\x04Ball\x12#\n" +
	"\rmin_threshold\x18\x01 \x02(\tR\fminThreshold\x12#\n" +
	"\rmax_threshold\x18\x02 \x02(\tR\fmaxThreshold\x12,\n" +
	"\x12ball_detect_radius\x18\x03 \x02(\x05R\x10ballDetectRadius\x123\n" +
	"\x15circularity_threshold\x18\x04 \x02(\x02R\x14circularityThresholdB.Z,github.com/Rione/ssl-RACOON-Pi2/proto/pb_gen"

var (
	file_pi_to_mw_proto_rawDescOnce sync.Once
	file_pi_to_mw_proto_rawDescData []byte
)

func file_pi_to_mw_proto_rawDescGZIP() []byte {
	file_pi_to_mw_proto_rawDescOnce.Do(func() {
		file_pi_to_mw_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pi_to_mw_proto_rawDesc), len(file_pi_to_mw_proto_rawDesc)))
	})
	return file_pi_to_mw_proto_rawDescData
}

var file_pi_to_mw_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pi_to_mw_proto_goTypes = []any{
	(*PiToMw)(nil),       // 0: PiToMw
	(*Robot_Status)(nil), // 1: Robot_Status
	(*Ball_Status)(nil),  // 2: Ball_Status
	(*Ball)(nil),         // 3: Ball
}
var file_pi_to_mw_proto_depIdxs = []int32{
	1, // 0: PiToMw.robots_status:type_name -> Robot_Status
	2, // 1: PiToMw.ball_status:type_name -> Ball_Status
	3, // 2: PiToMw.ball:type_name -> Ball
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pi_to_mw_proto_init() }
func file_pi_to_mw_proto_init() {
	if File_pi_to_mw_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pi_to_mw_proto_rawDesc), len(file_pi_to_mw_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pi_to_mw_proto_goTypes,
		DependencyIndexes: file_pi_to_mw_proto_depIdxs,
		MessageInfos:      file_pi_to_mw_proto_msgTypes,
	}.Build()
	File_pi_to_mw_proto = out.File
	file_pi_to_mw_proto_goTypes = nil
	file_pi_to_mw_proto_depIdxs = nil
}
